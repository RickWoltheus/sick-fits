{"version":3,"file":"static/webpack/static/development/pages/reset.js.ce258ef6063b26f78a6b.hot-update.js","sources":["webpack:///./components/Reset.js"],"sourcesContent":["import React, { Component } from 'react';\nimport Form from './styles/Form';\nimport gql from 'graphql-tag';\nimport PropTypes from 'prop-types'\nimport { Mutation } from 'react-apollo';\nimport Error from './ErrorMessage';\nimport {CURRENT_USER_QUERY} from './User'\n\n\nconst RESET_MUTATION = gql`\n    mutation RESET_MUTATION($resetToken: String!, $password: String!, $confirmPassword: String! ) {\n        resetPassword(resetToken: $resetToken, password: $password, confirmPassword: $confirmPassword) {\n            id\n            email\n            name\n        }\n    }\n`\n\nclass ResetForm extends Component {\n\n    state = {\n        password: '',\n        confirmPassword: ''\n    }\n\n    saveToState = (e) => {\n        this.setState({[e.target.name]: e.target.value})\n    }\n\n    render() {\n        return (\n            <Mutation \n                mutation={RESET_MUTATION} \n                variables={{\n                    resetToken: this.props.resetToken,\n                    password: this.state.password,\n                    confirmPassword: this.state.confirmPassword,\n                }}\n                refetchQueries={[{ query: CURRENT_USER_QUERY}]}\n            >\n            {(reset, {loading, error, called}) => {\n\n                return (\n                    <Form method=\"post\" onSubmit={async e => {\n                        e.preventDefault()\n                        await reset()\n                        this.setState({password: '', confirmPassword: ''})\n                    }}> \n                        <fieldset disabled={loading} aria-busy={loading}>\n                            <h2>reset your password</h2>\n                            <Error error={error}/>\n                            {!error && !loading && called && <p>success! check your email</p>}\n                            <label htmlFor=\"password\">\n                                password\n                                <input \n                                    type=\"password\" \n                                    name=\"password\"\n                                    placeholder=\"password\"\n                                    value={this.state.password}\n                                    onChange={this.saveToState}\n                                />\n                            </label>\n\n                            <label htmlFor=\"confirmPassword\">\n                                confirm password\n                                <input \n                                    type=\"password\" \n                                    name=\"confirmPassword\"\n                                    placeholder=\"confirm password\"\n                                    value={this.state.confirmPassword}\n                                    onChange={this.saveToState}\n                                />\n                            </label>\n                            <button type=\"submit\">Request reset</button>\n                        </fieldset>\n                    </Form>\n                )\n            }}\n            </Mutation>\n        );\n    }\n}\n\nexport default ResetForm;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AASA;;;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;;;;;;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAHA;AAKA;AAAA;AAAA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AAAA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAGA;;;;AA9DA;AACA;AAgEA;;;;A","sourceRoot":""}